// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp1.DataAccess;

#nullable disable

namespace WebApp1.DataAccess.Migrations
{
    [DbContext(typeof(LitTextyDbContext))]
    [Migration("20230520114045_initialPolishing2")]
    partial class initialPolishing2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp1.Models.Doba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cely_nazev")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CELY_NAZEV");

                    b.Property<string>("DobaDef")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOBA_POPIS");

                    b.HasKey("Id");

                    b.ToTable("DOBA");
                });

            modelBuilder.Entity("WebApp1.Models.LitText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cyklus")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1)")
                        .HasColumnName("CYKLUS");

                    b.Property<int>("NavSvatekId")
                        .HasColumnType("int");

                    b.Property<string>("Nazev_dne")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("NAZEV_DNE");

                    b.Property<int>("SvateId")
                        .HasColumnType("int")
                        .HasColumnName("SVATEK_ID");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NavSvatekId");

                    b.ToTable("LIT_TEXT");
                });

            modelBuilder.Entity("WebApp1.Models.Svatek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Barva")
                        .HasColumnType("decimal(10:0)")
                        .HasColumnName("BARVA");

                    b.Property<string>("Cely_nazev")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("CELY_NAZEV");

                    b.Property<string>("Cteni")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("CTENI");

                    b.Property<bool?>("Cykly")
                        .HasColumnType("bit")
                        .HasColumnName("CYKLY");

                    b.Property<int?>("DobaId")
                        .HasColumnType("int")
                        .HasColumnName("DOBA_ID");

                    b.Property<string>("Nazev_dne")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("NAZEV_DNE");

                    b.HasKey("Id");

                    b.HasIndex("DobaId");

                    b.ToTable("SVATEK");
                });

            modelBuilder.Entity("WebApp1.Models.LitText", b =>
                {
                    b.HasOne("WebApp1.Models.Svatek", "NavSvatek")
                        .WithMany()
                        .HasForeignKey("NavSvatekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NavSvatek");
                });

            modelBuilder.Entity("WebApp1.Models.Svatek", b =>
                {
                    b.HasOne("WebApp1.Models.Doba", "NavDoba")
                        .WithMany()
                        .HasForeignKey("DobaId");

                    b.Navigation("NavDoba");
                });
#pragma warning restore 612, 618
        }
    }
}
